{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the MPESA C2B SDK Documentation","text":"<p><code>mpesa-c2b-sdk</code> is a lightweight and developer-friendly SDK that makes it easy to integrate MPESA Customer-to-Business (C2B) payments into your Python applications.</p>"},{"location":"#features","title":"\ud83d\ude80 Features","text":"<ul> <li>Quick registration of confirmation and validation URLs</li> <li>Simple simulation of C2B payments in the Safaricom sandbox environment</li> </ul> <p>Use the navigation panel to get started and explore how to integrate and test your C2B workflows effortlessly.</p>"},{"location":"api-reference/","title":"API Reference","text":""},{"location":"api-reference/#register_urlshort_code-response_type-confirmation_url-validation_url","title":"<code>register_url(short_code, response_type, confirmation_url, validation_url)</code>","text":"<p>Registers Confirmation and Validation URLs with Safaricom's C2B API.</p>"},{"location":"api-reference/#parameters","title":"Parameters","text":"<ul> <li><code>short_code</code> (str): Paybill or Buy Goods shortcode</li> <li><code>response_type</code> (str): \"Completed\" or \"Cancelled\"</li> <li><code>confirmation_url</code> (str): URL to receive confirmation POST requests</li> <li><code>validation_url</code> (str): URL to receive validation POST requests</li> </ul>"},{"location":"api-reference/#returns","title":"Returns","text":"<ul> <li>JSON response from Safaricom API. Example:</li> </ul> <pre><code>{\n  \"ConversationID\": \"AG_20230710_00006c77d4c123456789\",\n  \"OriginatorCoversationID\": \"12345-67890-12345\",\n  \"ResponseDescription\": \"Success\"\n}\n</code></pre>"},{"location":"api-reference/#simulateshort_code-command_id-amount-phone_number-account_ref","title":"<code>simulate(short_code, command_id, amount, phone_number, account_ref)</code>","text":"<p>Simulates a C2B transaction in the sandbox.</p>"},{"location":"api-reference/#parameters_1","title":"Parameters","text":"<ul> <li><code>short_code</code> (str): Paybill or Buy Goods shortcode</li> <li><code>command_id</code> (str): Usually \"CustomerPayBillOnline\"</li> <li><code>amount</code> (int/float): Transaction amount</li> <li><code>phone_number</code> (str): Phone number making the payment</li> <li><code>account_ref</code> (str): Reference for the transaction</li> </ul>"},{"location":"api-reference/#returns_1","title":"Returns","text":"<ul> <li>JSON response from Safaricom API. Example:</li> </ul> <pre><code>{\n  \"ConversationID\": \"AG_20230710_00006c77d4c123456789\",\n  \"OriginatorCoversationID\": \"23456-78901-23456\",\n  \"ResponseDescription\": \"Accept the service request successfully.\"\n}\n</code></pre>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#does-this-package-support-real-payments","title":"\u2753 Does this package support real payments?","text":"<p>Not yet. Support for real payments will be introduced in the next release version. Stay tuned!</p>"},{"location":"faq/#how-do-i-test-payments","title":"\u2753 How do I test payments?","text":"<p>Use the sandbox environment by setting <code>ENVIRONMENT=sandbox</code> in your configuration. This allows you to simulate payments without triggering real transactions.</p>"},{"location":"faq/#can-i-customize-the-phone-number-used","title":"\u2753 Can I customize the phone number used?","text":"<p>Yes. The <code>simulate</code> function accepts a phone number parameter, allowing you to specify any valid test MSISDN (e.g., <code>2547XXXXXXXX</code>).</p>"},{"location":"faq/#can-i-customize-the-transaction-amount","title":"\u2753 Can I customize the transaction amount?","text":"<p>Absolutely. You define the transaction amount in the <code>simulate</code> function as per your testing requirements.</p>"},{"location":"faq/#can-i-store-transaction-details","title":"\u2753 Can I store transaction details?","text":"<p>The SDK does not store transaction details by default. It's up to the developer to handle and persist the responses based on their application needs.</p>"},{"location":"getting-started/","title":"Getting Started","text":""},{"location":"getting-started/#prerequisites","title":"Prerequisites","text":"<p>Before installing and using the SDK, ensure you have the following:</p> <ul> <li>\u2705 Python 3.7+ installed on your system.</li> <li>\ud83c\udf10 Public URLs for confirmation and validation (required by Safaricom to receive transaction callbacks).</li> <li>\ud83d\udd10 Safaricom Developer Credentials (Consumer Key and Consumer Secret).</li> <li>\ud83e\uddea For testing: an account on Safaricom Developer Portal with access to the sandbox environment.</li> </ul>"},{"location":"getting-started/#installation","title":"Installation","text":"<p>Install the SDK via pip:</p> <pre><code>pip install mpesa-c2b-sdk\n</code></pre>"},{"location":"getting-started/#quick-example","title":"Quick Example","text":"<pre><code>from mpesa_c2b_sdk.payments import register_url, simulate\n\n# Register confirmation and validation URLs\nregister_url(\n    short_code=\"600584\",\n    response_type=\"Completed\",\n    confirmation_url=\"https://yourdomain.com/confirmation\",\n    validation_url=\"https://yourdomain.com/validation\"\n)\n\n# Simulate a C2B payment (sandbox only)\nsimulate(\n    short_code=\"600584\",\n    command_id=\"CustomerPayBillOnline\",\n    amount=100,\n    phone_number=\"2547XXXXXXXX\",\n    account_ref=\"INV001\"\n)\n\n</code></pre>"},{"location":"getting-started/#important-note-for-local-testing","title":"\ud83d\udccc Important Note for Local Testing","text":"<p>When testing locally (e.g., using <code>http://localhost:8000/...</code>), Safaricom's servers cannot access your confirmation and validation endpoints because they must be publicly accessible.</p>"},{"location":"getting-started/#recommended-solution","title":"\u2705 Recommended Solution","text":"<p>Use ngrok to expose your local server to the internet.</p>"},{"location":"getting-started/#steps","title":"Steps:","text":"<ol> <li>Install and start ngrok:</li> </ol> <pre><code>ngrok http 8000\n</code></pre> <ol> <li>ngrok will give you a public URL like:</li> </ol> <pre><code>https://your-ngrok-subdomain.ngrok.io\n</code></pre> <ol> <li>Replace your local callback URLs with the public ones in your code:</li> </ol> <pre><code>confirmation_url = \"https://your-ngrok-subdomain.ngrok.io/api/confirmation/\"\nvalidation_url = \"https://your-ngrok-subdomain.ngrok.io/api/validation/\"\n</code></pre> <p>This will allow Safaricom to send real-time callback data to your local app during sandbox testing.</p>"}]}